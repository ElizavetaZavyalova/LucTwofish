package org.example.Algoritmes.Twofish.help;



public record ConstantValues() {
   private record Q0(){

      public static byte[] makeT0() {
         return new byte[]{0x8, 0x1, 0x7, 0xD, 0x6, 0xf, 0x3, 0x2, 0x0, 0xb, 0x5, 0x9, 0xe, 0xc, 0xa, 0x4};
      }

      public static byte[] makeT1() {
         return new byte[]{0xe, 0xc, 0xb, 0x8, 0x1, 0x2, 0x3, 0x5, 0xf, 0x4, 0xa, 0x6, 0x7, 0x0, 0x9, 0xd};
      }

      public static byte[] makeT2() {
         return new byte[]{0xb, 0xa, 0x5, 0xe, 0x6, 0xd, 0x9, 0x0, 0xc, 0x8, 0xf, 0x3, 0x2, 0x4, 0x7, 0x1};
      }

      public static byte[] makeT3() {
         return new byte[]{0xd, 0x7, 0xf, 0x4, 0x1, 0x2, 0x6, 0xe, 0x9, 0xb, 0x3, 0x0, 0x8, 0x5, 0xc, 0xa};
      }
   }
   private record Q1(){
      public static byte[] makeT0() {
         return new byte[]{0x2, 0x8, 0xb, 0xd, 0xf, 0x7, 0x6, 0xe, 0x3, 0x1, 0x9, 0x4, 0x0, 0xa, 0xc, 0x5};
      }

      public static byte[] makeT1() {
         return new byte[]{ 0x1, 0xe, 0x2, 0xb, 0x4, 0xc, 0x3, 0x7, 0x6, 0xd, 0xa, 0x5, 0xf, 0x9, 0x0, 0x8};
      }

      public static byte[] makeT2() {
         return new byte[]{0x4, 0xc, 0x7, 0x5, 0x1, 0x6, 0x9, 0xa, 0x0, 0xe, 0xd, 0x8, 0x2, 0xb, 0x3, 0xf};
      }

      public static byte[] makeT3() {
         return new byte[]{ 0xb, 0x9, 0x5, 0x1, 0xc, 0x3, 0xd, 0xe, 0x6, 0x4, 0x7, 0xf, 0x2, 0x0, 0x8, 0xa};
      }
   }
   public static byte[][][]makeQ(){
      return new byte[][][]{{Q0.makeT0(),Q0.makeT1(),Q0.makeT2(),Q0.makeT3()},
                            {Q1.makeT0(),Q1.makeT1(),Q1.makeT2(),Q1.makeT3()}};
   }
   public static byte [][] makeMDS(){
      return new byte[][]{ { (byte)0x01, (byte) 0xEF,  (byte)0x5B,  (byte)0x5B},
                           { (byte)0x5B,  (byte)0xEF,  (byte)0xEF,  (byte)0x01},
                           { (byte)0xEF,  (byte)0x5B,  (byte)0x01,  (byte)0xEF},
                           { (byte)0xEF,  (byte)0x01,  (byte)0xEF,  (byte)0x5B}};
   }
   public static byte [][] makeRS(){
      return new byte[][]{ {  (byte)0x01, (byte)0xA4, (byte)0x55, (byte)0x87, (byte)0x5A, (byte)0x58, (byte)0xDB, (byte)0x9E},
                           {  (byte)0xA4, (byte)0x56, (byte)0x82, (byte)0xF3, (byte)0x1E, (byte)0xC6, (byte)0x68, (byte)0xE5},
                           {  (byte)0x02, (byte)0xA1, (byte)0xFC, (byte)0xC1, (byte)0x47, (byte)0xAE, (byte)0x3D, (byte)0x19},
                           {  (byte)0xA4, (byte)0x55, (byte)0x87, (byte)0x5A, (byte)0x58, (byte)0xDB, (byte)0x9E, (byte)0x03}};
   }
   public static int[][]makeQOrder(){
      return new int[][]{{1,0,1,0},{0,0,1,1},{0,1,0,1},{1,1,0,0},{1,0,0,1}};
   }

}

